{"version":3,"sources":["store/actions/types.js","asyncAction/objects.js","store/actions/actionCreators.js","components/teacher/test.js","asyncAction/areas.js","asyncAction/teachers.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/teacher-list-item/teacher-list-item.js","components/teachers-list/teachers-list.js","components/app/App.js","store/reducers/cardsReducer.js","store/reducers/subjectsReducer.js","store/reducers/areasReducer.js","store/reducers/teachersReducer.js","store/index.js","index.js"],"names":["GET_AREAS","GET_AREA_ID","GET_DISTRICTS","GET_DISTRICT_ID","SHOW_SUBJECTS","FORM_SUBJECT_ID","FORM_SUBJECT_NAME","GET_TEACHERS","GET_TEACHERS_CARDS","SHOW_MORE_CARDS","fetchObjects","dispatch","fetch","then","response","json","type","payload","Test","fetchAreas","fetchAreaId","areaId","method","headers","Pragma","Accept","makeRequest","url","options","a","console","warn","toString","SearchPanel","useDispatch","subjects","useSelector","state","areas","districts","districtId","subjectId","useEffect","selectSubject","subject","id","formSubjectNameAction","name","formAreaId","area","log","formDistrictId","district","makeTeachersCards","teachersId","ids","map","teacher","i","join","cards","error","fetchTeachersCards","className","Autocomplete","onChange","event","option","getOptionLabel","style","width","marginRight","renderInput","params","TextField","label","variant","cityName","Button","color","onClick","TeacherListItem","teachersCards","teachers","subjectName","showCardsNumber","showCards","slice","card","src","photoPathSquare","firstName","patrName","minPricePerHour","TeacherList","buttonList","length","marginTop","height","App","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.363c4a96.chunk.js","sourcesContent":["export const GET_AREAS = \"GET_AREAS\";\r\nexport const GET_AREA_ID = \"GET_AREA_ID\";\r\nexport const GET_DISTRICTS = \"GET_DISTRICTS\";\r\nexport const GET_DISTRICT_ID = \"GET_DISTRICT_ID\";\r\n\r\n\r\nexport const ADD_CUSTOMER = \"ADD_CUSTOMER\";\r\nexport const REMOVE_CUSTOMER = \"REMOVE_CUSTOMER\";\r\nexport const SHOW_SUBJECTS = \"SHOW_SUBJECTS\";\r\nexport const FORM_SUBJECT_ID = \"FORM_SUBJECT_ID\";\r\nexport const FORM_SUBJECT_NAME = \"FORM_SUBJECT_NAME\";\r\n\r\n\r\nexport const GET_TEACHERS = \"GET_TEACHERS\";\r\nexport const GET_TEACHERS_CARDS = \"GET_TEACHERS_CARDS\";\r\n\r\n\r\nexport const SHOW_MORE_CARDS = \"SHOW_MORE_CARDS\";","import {showSubjectsAction} from \"../store/actions/actionCreators\";\r\n\r\n\r\nexport const fetchObjects = () => {\r\n    return function (dispatch) {\r\n        fetch('https://api.repetit.ru/public/subjects')\r\n            .then(response => response.json())\r\n            .then(json => dispatch(showSubjectsAction(json)))\r\n    }\r\n}\r\n\r\n\r\n","import {\r\n    GET_AREA_ID,\r\n    GET_AREAS,\r\n    GET_DISTRICT_ID,\r\n    GET_DISTRICTS,\r\n    FORM_SUBJECT_ID,\r\n    FORM_SUBJECT_NAME,\r\n    REMOVE_CUSTOMER,\r\n    SHOW_SUBJECTS,\r\n    SHOW_MORE_CARDS,\r\n    GET_TEACHERS, GET_TEACHERS_CARDS,\r\n} from \"./types\";\r\n\r\n\r\nexport const getAreasAction = (payload) => ({\r\n    type:GET_AREAS, payload\r\n});\r\n\r\nexport const getAreaIdAction = (payload) => ({\r\n    type:GET_AREA_ID, payload\r\n});\r\n\r\nexport const getDistrictsAction = (payload) => ({\r\n    type:GET_DISTRICTS, payload\r\n});\r\n\r\nexport const getDistrictIdAction = (payload) => ({\r\n    type:GET_DISTRICT_ID, payload\r\n});\r\n\r\n\r\n\r\n\r\nexport const formSubjectIdAction = (payload) => ({\r\n    type:FORM_SUBJECT_ID, payload\r\n});\r\n\r\nexport const formSubjectNameAction = (payload) => ({\r\n    type:FORM_SUBJECT_NAME, payload\r\n});\r\n\r\nexport const deleteCustomerAction = (payload) => ({\r\n    type:REMOVE_CUSTOMER, payload\r\n});\r\n\r\nexport const showSubjectsAction = (payload) => ({\r\n    type:SHOW_SUBJECTS, payload\r\n});\r\n\r\n\r\nexport const getTeachersAction = (payload) => ({\r\n    type:GET_TEACHERS, payload\r\n});\r\n\r\nexport const getTeachersCardsAction = (payload) => ({\r\n    type:GET_TEACHERS_CARDS, payload\r\n});\r\n\r\nexport const showMoreCardsAction = (payload) => ({\r\n    type:SHOW_MORE_CARDS, payload\r\n});","import React from 'react';\r\n\r\nfunction Test({ options, onChange }) {\r\n    return (\r\n        options.map(option=><div onClick={(e) => {onChange(e, option)} }>{option.name} </div>)\r\n    );\r\n}\r\n\r\nexport default Test;","import {getAreasAction, getDistrictsAction} from \"../store/actions/actionCreators\";\r\n\r\n\r\nexport const fetchAreas = () => {\r\n    return function (dispatch) {\r\n        fetch('https://api.repetit.ru/public/areas')\r\n            .then(response => response.json())\r\n            .then(json => dispatch(getAreasAction(json)))\r\n    }\r\n}\r\n\r\nexport const fetchAreaId = (areaId) => {\r\n    return function (dispatch) {\r\n\r\n        fetch(`https://api.repetit.ru/public/districts?AreaId=${areaId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((json) => dispatch(getDistrictsAction(json)));\r\n    }\r\n}\r\n\r\n\r\n","import {\r\n  getTeachersAction,\r\n  getTeachersCardsAction,\r\n} from \"../store/actions/actionCreators\";\r\n\r\nexport const fetchTeachers = (areaId, districtId, subjectId) => {\r\n  return function (dispatch) {\r\n    fetch(\r\n      `https://api.repetit.ru/public/search/teacherIds?AreaId=${areaId}&DistrictId=${districtId}&SubjectId=${subjectId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((json) => dispatch(getTeachersAction(json)))\r\n      .catch((e) => console.error(e));\r\n  };\r\n};\r\n\r\nexport const fetchTeachersCards = (areaId, districtId, subjectId) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      const teachersId = await makeRequest(\r\n        `https://api.repetit.ru/public/search/teacherIds?AreaId=${areaId}&DistrictId=${districtId}&SubjectId=${subjectId}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n\r\n      const ids = teachersId\r\n        .map((teacher, i) => `Ids[${i}]=${teacher}`)\r\n        .join(\"&\");\r\n\r\n      const cards = await makeRequest(\r\n        `https://api.repetit.ru/public/teachers/short?${ids}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n\r\n      dispatch(getTeachersCardsAction(cards));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n};\r\n\r\nconst headers = {\r\n  \"Cache-Control\": \"no-cache no-store, max-age=0\",\r\n  Pragma: \"no-cache\",\r\n  \"Content-Type\": \"application/json\",\r\n  Accept: \"application/json\",\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n};\r\n\r\nexport async function makeRequest(url, options) {\r\n  try {\r\n    const response = await fetch(url, { headers, ...options });\r\n\r\n    return await response.json();\r\n  } catch (e) {\r\n    console.warn(e.toString());\r\n\r\n    throw e;\r\n  }\r\n}\r\n","import SearchPanelItem from \"../search-panel-item/\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport React, {useEffect} from \"react\";\r\nimport {fetchObjects} from \"../../asyncAction/objects\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Test from \"../teacher/test\";\r\nimport {\r\n    formSubjectIdAction,\r\n    formSubjectNameAction,\r\n    getAreaIdAction, getDistrictIdAction\r\n} from \"../../store/actions/actionCreators\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {fetchAreaId, fetchAreas} from \"../../asyncAction/areas\";\r\nimport './search-panel.css';\r\nimport {fetchTeachersCards} from \"../../asyncAction/teachers\";\r\n\r\n\r\n// const useStyles = makeStyles({\r\n//     // notchedOutline :{\r\n//     //     borderColor: 'blue',\r\n//     //     '&:hover': {borderColor:'green !important'}\r\n//     // },\r\n//     // focused: {\r\n//     //     '& fieldset' : {borderColor: ' red !important'}\r\n//     //     , color: ' red !important'\r\n//     //\r\n//     // },\r\n// });\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         background: '#009990',\r\n//         border: 0,\r\n//         borderRadius: 5,\r\n//         color: 'white',\r\n//         height: 45,\r\n//         padding: '0 30px',\r\n//     },\r\n\r\n\r\n// });\r\n\r\nconst SearchPanel = () => {\r\n    // const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const subjects = useSelector((state) => state.subjects.subjects);\r\n    const areas = useSelector((state) => state.areas.areas);\r\n    const districts = useSelector((state) => state.areas.districts);\r\n    const areaId = useSelector((state) => state.areas.areaId);\r\n    const districtId = useSelector((state) => state.areas.districtId);\r\n    const subjectId = useSelector((state) => state.subjects.subjectId);\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(fetchObjects());\r\n            dispatch(fetchAreas());\r\n        }, []\r\n    )\r\n    const selectSubject = (subject) => {\r\n        dispatch(formSubjectIdAction(subject.id));\r\n        dispatch(formSubjectNameAction(subject.name));\r\n    };\r\n\r\n    const formAreaId = (area) => {\r\n        dispatch(getAreaIdAction(area.id));\r\n        dispatch(fetchAreaId(area.id));\r\n        console.log(area.id);\r\n    };\r\n\r\n    const formDistrictId = (district) => {\r\n        dispatch(getDistrictIdAction(district.id));\r\n    };\r\n\r\n    const makeTeachersCards = () => {\r\n        dispatch(fetchTeachersCards(areaId, districtId, subjectId));\r\n    };\r\n\r\n    return (\r\n\r\n    <div className='search'>\r\n\r\n        <div className=\"search__list\" >\r\n            <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={subjects}\r\n                onChange={(event, option) => {\r\n                    selectSubject(option)}}\r\n                getOptionLabel={(option) => option.name}\r\n                style={{ width: 300, marginRight: 10 + \"px\" }}\r\n                renderInput={(params) => <TextField  {...params} label=\"Предмет\" variant=\"outlined\" />}\r\n            />\r\n        </div>\r\n        <div className=\"search__list\">\r\n            <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={areas}\r\n                onChange={(event, option) => {\r\n                    formAreaId(option)}}\r\n                getOptionLabel={(option) => option.cityName}\r\n                style={{ width: 300, marginRight: 10 + \"px\" }}\r\n                renderInput={(params) => <TextField  {...params} label=\"Город\" variant=\"outlined\" />}\r\n            />\r\n        </div>\r\n        <div className=\"search__list\">\r\n            <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={districts}\r\n\r\n                onChange={(event, option) => {\r\n                    formDistrictId(option)}}\r\n                getOptionLabel={(option) => option.name}\r\n                style={{ width: 300, marginRight: 10 + \"px\" }}\r\n                renderInput={(params) => <TextField  {...params} label=\"Район\" variant=\"outlined\" />}\r\n            />\r\n        </div>\r\n        <div className=\"search__button\">\r\n            <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                    makeTeachersCards();\r\n                }}\r\n            >\r\n                Применить фильтр\r\n            </Button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchPanel;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;\r\n","import { useSelector } from \"react-redux\";\r\nimport './teacher-list-item.css';\r\nimport React from 'react';\r\n\r\n\r\nconst TeacherListItem = () => {\r\n    const teachersCards = useSelector((state) => state.teachers.teachersCards);\r\n    const subject = useSelector((state) => state.subjects.subjectName);\r\n    const showCardsNumber = useSelector((state) => state.cards.showCards);\r\n\r\n\r\n    const cards = teachersCards.slice(0,showCardsNumber).map(card => <div className={'teacher-list-item'}>\r\n        <img src={card.photoPathSquare}/>\r\n        <div>\r\n            <div className=\"name\">{`${card.firstName} ${card.patrName}`}</div>\r\n            <div className=\"subject\">{subject}</div>\r\n            <div className=\"price\">от {card.minPricePerHour} р</div>\r\n        </div>\r\n    </div>)\r\n\r\n\r\n    return (\r\n        <div>\r\n            {cards}\r\n        </div>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default TeacherListItem;","import Button from '@material-ui/core/Button';\r\nimport TeacherListItem from \"../teacher-list-item/teacher-list-item\";\r\nimport './teacher-list.css';\r\nimport {showMoreCardsAction} from \"../../store/actions/actionCreators\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst TeacherList = () => {\r\n    const dispatch = useDispatch();\r\n    const teachersCards = useSelector((state) => state.teachers.teachersCards);\r\n\r\n    const buttonList =  teachersCards.length > 0 ? (<Button\r\n        onClick={() => {\r\n        dispatch(showMoreCardsAction(10))}}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{marginTop:10 + 'px', width:336+ 'px', height:45+'px'}}>\r\n        Загрузить Еще\r\n    </Button>) : null;\r\n  return (\r\n    <div className='main'>\r\n      <TeacherListItem />\r\n        {buttonList}\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default TeacherList;","import React, {useEffect} from \"react\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TeacherList from \"../teachers-list/teachers-list\";\r\nimport \"./App.css\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <SearchPanel />\r\n      <TeacherList className='list'/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {SHOW_MORE_CARDS} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    showCards: 10\r\n};\r\n\r\n\r\nexport const cardsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SHOW_MORE_CARDS:\r\n            return {...state, showCards: state.showCards + action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import {FORM_SUBJECT_ID, SHOW_SUBJECTS, FORM_SUBJECT_NAME} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    subjects: [],\r\n    subjectId:'',\r\n    subjectName:''\r\n};\r\n\r\n\r\nexport const subjectsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FORM_SUBJECT_ID:\r\n            return {...state, subjectId: action.payload }\r\n        case FORM_SUBJECT_NAME:\r\n            return {...state, subjectName: action.payload }\r\n        case SHOW_SUBJECTS:\r\n            return {...state, subjects: [ ...action.payload]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {GET_AREAS, GET_AREA_ID, GET_DISTRICTS, GET_DISTRICT_ID} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    areas: [],\r\n    areaId:'',\r\n    districts:[],\r\n    districtId:''\r\n};\r\n\r\n\r\nexport const areasReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_AREAS:\r\n            return { ...state, areas: [ ...action.payload] }\r\n        case GET_AREA_ID:\r\n            return { ...state, areaId: action.payload }\r\n        case GET_DISTRICTS:\r\n            return { ...state, districts: [...action.payload] }\r\n        case GET_DISTRICT_ID:\r\n            return { ...state, districtId: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {GET_TEACHERS, GET_TEACHERS_CARDS} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  teachers:[],\r\n    teachersCards:[],\r\n};\r\n\r\n\r\nexport const teachersReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_TEACHERS:\r\n            return { ...state, teachers: [...action.payload] }\r\n        case GET_TEACHERS_CARDS:\r\n            return { ...state, teachersCards: [...action.payload] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {applyMiddleware, createStore, combineReducers} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {cardsReducer} from \"./reducers/cardsReducer\";\r\nimport {subjectsReducer} from \"./reducers/subjectsReducer\";\r\nimport {areasReducer} from \"./reducers/areasReducer\";\r\nimport {teachersReducer} from \"./reducers/teachersReducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    cards: cardsReducer,\r\n    subjects: subjectsReducer,\r\n    areas: areasReducer,\r\n    teachers: teachersReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/app/App';\nimport {Provider} from \"react-redux\";\nimport {store} from '../src/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}